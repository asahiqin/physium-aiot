<import name="appbar" src="../../../components/appbar"></import>
<template>
  <div class="page">
    <text
      if="{{ num_2.length == 0 }}"
      class="title"
      style="font-size: 25px; margin-top: 10px; position: absolute; top: 250px; left: 10px"
    >
      正在渲染中,请耐心等待
    </text>
    <div class="content-{{ device }}-{{ have_describe }}" else>
      <scroll scroll-x="{{ true }}" scroll-y="true" style="flex-direction: column">
        <div class="elements-line">
            <div style="width:50px;height:50px;flex-direction: column" @click="setting">
              <image
                src="../../../common/setting.png"
                style="height: 30px; width: 30px; object-fit: cover"
              />
          </div>
        </div>
        <!--第一周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">1</text>
          </div>
          <input
            if="{{ num_2 != [] }}"
            class="elements {{ element_type[0] }}"
            type="button"
            value="H"
            @click="getElement('1')"
          />
          <div for="{{ num_array(16) }}">
            <div class="elements-space"></div>
          </div>
          <input
            if="{{ num_2 != [] }}"
            class="elements {{ element_type[1] }}"
            type="button"
            value="He"
            @click="getElement('2')"
          />
        </div>
        <!--第二周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">2</text>
          </div>
          <div for="{{ num_2 }}">
            <input
              class="elements {{ element_type[$idx+2] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+2] }}"
              @click="getElement($idx + 3)"
            />
          </div>
          <div for="{{ num_10 }}">
            <div class="elements-space"></div>
          </div>
          <div for="{{ num_6 }}">
            <input
              class="elements {{ element_type[$idx+4] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+4] }}"
              @click="getElement($idx + 5)"
            />
          </div>
        </div>
        <!--第三周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">3</text>
          </div>
          <div for="{{ num_2 }}">
            <input
              class="elements {{ element_type[$idx+10] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+10] }}"
              @click="getElement($idx + 11)"
            />
          </div>
          <div for="{{ num_10 }}">
            <div class="elements-space"></div>
          </div>
          <div for="{{ num_6 }}">
            <input
              class="elements {{ element_type[$idx+12] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+12] }}"
              @click="getElement($idx + 13)"
            />
          </div>
        </div>
        <!--第四周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">4</text>
          </div>
          <div for="{{ num_18 }}">
            <input
              class="elements {{ element_type[$idx+18] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+18] }}"
              @click="getElement($idx + 19)"
            />
          </div>
        </div>
        <!--第五周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">5</text>
          </div>
          <div for="{{ num_18 }}">
            <input
              class="elements {{ element_type[$idx+36] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+36] }}"
              @click="getElement($idx + 37)"
            />
          </div>
        </div>
        <!--第六周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">6</text>
          </div>
          <div for="{{ num_2 }}">
            <input
              class="elements {{ element_type[$idx+54] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+54] }}"
              @click="getElement($idx + 55)"
            />
          </div>
          <input class="elements lanthanoid" type="button" value="镧系" />
          <div for="{{ num_15 }}">
            <input
              class="elements {{ element_type[$idx+71] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+71] }}"
              @click="getElement($idx + 72)"
            />
          </div>
        </div>
        <!--第七周期-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="table-title">7</text>
          </div>
          <div for="{{ num_2 }}">
            <input
              class="elements {{ element_type[$idx+86] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+86] }}"
              @click="getElement($idx + 87)"
            />
          </div>
          <input class="elements actinoid" type="button" value="锕系" />
          <div for="{{ num_15 }}">
            <input
              class="elements {{ element_type[$idx+103] }}"
              type="button"
              value="{{ elements_symbol_data[$idx+103] }}"
              @click="getElement($idx + 104)"
            />
          </div>
        </div>
        <!--分割线-->
        <div class="elements-line divider"></div>
        <!--镧系-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="title">镧系</text>
          </div>
          <div for="{{ num_15 }}">
            <input
              class="elements lanthanoid"
              type="button"
              value="{{ elements_symbol_data[$idx+56] }}"
              @click="getElement($idx + 57)"
            />
          </div>
        </div>
        <!--锕系-->
        <div class="elements-line">
          <div class="elements-space">
            <text class="title">锕系</text>
          </div>
          <div for="{{ num_15 }}">
            <input
              class="elements actinoid"
              type="button"
              value="{{ elements_symbol_data[$idx+88] }}"
              @click="getElement($idx + 89)"
            />
          </div>
        </div>
      </scroll>
    </div>
    <scroll class="index-{{ have_describe }}" scroll-x="true">
      <div class="divider"></div>
      <div class="elements-line">
        <div class="elements-space" style="flex-direction: column" @click="back">
          <div class="actions-{{ screen_type }}" style="height: 54px; width: 54px">
            <img
              class="back-button"
              src="/common/back.png"
              style="height: 40px; width: 40px; margin-left: 2px"
            />
          </div>
        </div>
        <div for="{{ num_18 }}" tid="uniqueId">
          <div class="elements-space" style="flex-direction: column">
            <text class="table-title">{{ index[$idx] }}</text>
            <text class="table-title">{{ $idx + 1 }}</text>
          </div>
        </div>
      </div>
      <div class="elements-line" if="{{ have_describe }}">
        <div for="{{ num_array(15) }}" tid="uniqueId">
          <div class="elements-space describe" style="flex-direction: column"></div>
        </div>
        <div class="elements-space describe" style="flex-direction: column">
          <text class="describe">氮族元素</text>
        </div>
        <div class="elements-spacje describe" style="flex-direction: column">
          <text class="describe">氧族元素</text>
        </div>
        <div class="elements-space describe" style="flex-direction: column">
          <text class="describe">卤素</text>
        </div>
        <div class="elements-space describe" style="flex-direction: column"></div>
      </div>
    </scroll>
  </div>
</template>

<script>
import router from "@system.router"
import pre_generated_data from "../../../elements/pre_generated_data.json"

function num_array(count) {
  return new Array(count).fill(0)
}
export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    element: "",
    elements_symbol_data: pre_generated_data.symbols,
    index: pre_generated_data.index,
    num_2: [],
    num_6: [],
    num_15: [],
    num_10: [],
    num_18: [],
    screen_type: "",
    element_type: new Array(118).fill("normal"),
    device: "",
    have_describe: false
  },
  onInit() {
    this.screen_type = this.$app.$def.device.screen_type

    this.device = this.$app.$def.device.device
  },
  onShow() {
    this.have_describe = this.$app.$def.chemistry.have_describe
    this.change()
    if (this.num_2.length == 0) {
      this.num_2 = pre_generated_data.num[0]
      this.num_6 = pre_generated_data.num[1]
      this.num_10 = pre_generated_data.num[2]
      this.num_15 = pre_generated_data.num[3]
      this.num_18 = pre_generated_data.num[4]
    }
  },
  change() {
    const data = this.$app.$def.chemistry
    const names = [
      "alkali",
      "alkaline",
      "noble",
      "transition",
      "post_transition",
      "metalloids",
      "active_nometals"
    ]
    for (var n of names) {
      var e = data[n]
      var element_t = []
      switch (n) {
        case "alkali":
          element_t = pre_generated_data.element_type.alkali
          break
        case "alkaline":
          element_t = pre_generated_data.element_type.alkaline
          break
        case "noble":
          element_t = pre_generated_data.element_type.noble
          break
        case "transition":
          element_t = pre_generated_data.element_type.transition
          break
        case "post_transition":
          element_t = pre_generated_data.element_type.post_transition
          break
        case "metalloids":
          element_t = pre_generated_data.element_type.metalloids
          break
        case "active_nometals":
          element_t = pre_generated_data.element_type.active_nometals
          break
      }
      if (e) {
        for (var i of element_t) {
          this.element_type[i - 1] = n
        }
      } else {
        for (var i of element_t) {
          this.element_type[i - 1] = "normal"
        }
      }
    }
  },
  num_array(count) {
    return new Array(count).fill(0)
  },
  getElement(element) {
    console.log(element)
    router.push({
      uri: "/pages/chemistry/detail",
      params: {
        element: this.elements_symbol_data[element - 1],
        index: element
      }
    })
  },
  setting() {
    router.push({
      uri: "/pages/chemistry/setting"
    })
  },
  back() {
    router.back()
  }
}
</script>

<style lang="scss">
@use "../../../material/base.scss";
@import "../../../material/divider.scss";
@import "../../../material/base.scss";
@import "../../../material/app_bar.scss";

$alkali: #6c3b01;
$alkaline: #846011;
$lanthanoid: #402c17;
$actinoid: #732e4c;
$transition: #711019;
$poor: #003666;
$metalloid: #015146;
$nonmetal: #3e6418;
$noble: #3a2151;
$nocategory: #222;
$devices: band9, band9p, band10;
$device-height: 490px, 480px, 520px;
.elements-line {
  flex-direction: row;
}
.rotate {
  transform: rotate(90deg);
  transform-origin: bottom right;
}
.elements {
  width: 50px;
  border-radius: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  font-size: 20px;
  text-align: center;
  margin-left: 2px;
  margin-right: 2px;
  margin-top: 2px;
  margin-bottom: 2px;
  border-color: base.$on-surface;
  border-width: 1px;
  .normal {
    color: base.$on-surface;
    background-color: base.$surface;
  }
  .alkali {
    color: base.$on-surface;
    background-color: $alkali;
  }
  .alkaline {
    color: base.$on-surface;
    background-color: $alkaline;
  }
  .noble {
    color: base.$on-surface;
    background-color: $noble;
  }
  .transition {
    color: base.$on-surface;
    background-color: $transition;
  }
  .post_transition {
    color: base.$on-surface;
    background-color: $poor;
  }
  .metalloids {
    color: base.$on-surface;
    background-color: $metalloid;
  }
  .active_nometals {
    color: base.$on-surface;
    background-color: $nonmetal;
  }
  .lanthanoid {
    color: base.$on-surface;
    background-color: $lanthanoid;
  }
  .actinoid {
    color: base.$on-surface;
    background-color: $actinoid;
  }
}
.table-title {
  align-items: center;
  color: #e6e0e9;

  font-size: 20px;
}
.elements-space {
  width: 54px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #e6e0e9;
  font-size: 18px;
}
.describe {
  height: 50px;
  width: 54px;
  align-items: center;
  text-align: center;
  color: #e6e0e9;
  font-size: 18px;
}
.index-true {
  flex-direction: column;
  position: absolute;
  padding-top: 10px;
  padding-left: 10px;
  top: 0px;
  left: 0;
  width: 1026px;
  height: 120px;
  background-color: base.$surface;
}
.index-false {
  padding-top: 10px;
  padding-left: 10px;
  flex-direction: column;
  width: 1026px;
  height: 70px;
  position: absolute;
  top: 0px;
  left: 0;
  background-color: base.$surface;
}
@each $d in $devices {
  $index: index($devices, $d);
  .content-#{$d}-true {
    flex-direction: column;
    position: absolute;
    padding-left: 10px;
    width: 1026px;
    top: 120px;
    left: 0;
    height: nth($device-height, $index) - 120px;
  }
  .content-#{$d}-false {
    padding-left: 10px;
    flex-direction: column;
    width: 1026px;
    position: absolute;
    top: 70px;
    left: 0;
    height: nth($device-height, $index) - 70px;
  }
}
</style>

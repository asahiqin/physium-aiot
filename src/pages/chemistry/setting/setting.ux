<template>
  <div class="page">
    <scroll scroll-y="true" class="content-{{ device }}" scroll-x="true">
      <div class="notice-pill">
        <text class="title">启用描述(适用于横向)</text>
        <switch checked="{{ have_describe }}" @change="describe_changd" />
      </div>
      <div class="notice-pill">
        <text class="title">(实验)使用横向周期表(重新进入周期表生效)</text>
        <switch checked="{{ rotate }}" @change="rotate_change" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示碱金属</text>
          <div class="alkali"></div>
        </div>
        <switch checked="{{ alkali }}" @change="alkali_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示碱土金属</text>
          <div class="alkaline"></div>
        </div>
        <switch checked="{{ alkaline }}" @change="alkaline_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示过渡金属</text>
          <div class="transition"></div>
        </div>
        <switch checked="{{ transition }}" @change="transition_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示贫金属</text>
          <div class="poor"></div>
        </div>
        <switch checked="{{ post_transition }}" @change="post_transition_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示类金属</text>
          <div class="metalloid"></div>
        </div>
        <switch checked="{{ metalloids }}" @change="metalloids_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示活泼非金属</text>
          <div class="nonmetal"></div>
        </div>
        <switch checked="{{ active_nometals }}" @change="active_nometals_changd" />
      </div>
      <div class="notice-{{ screen_type }}">
        <div class="color-{{ screen_type }}">
          <text class="title">显示稀有气体</text>
          <div class="noble"></div>
        </div>
        <switch checked="{{ noble }}" @change="noble_changd" />
      </div>
      <div style="width: 100%; height: 40px"></div>
    </scroll>
    <div class="appBar-{{ device }}" style="">
      <img src="/common/back.png" class="back-button" @click="back" />
      <text>元素周期表设置</text>
      <div></div>
    </div>
  </div>
</template>

<script>
import router from "@system.router"
import storage from "@system.storage"
export default {
  private: {
    screen_type: "",
    device: "",
    have_describe: true,
    alkali: false,
    alkaline: false,
    noble: false,
    transition: false,
    post_transition: false,
    metalloids: false,
    active_nometals: false
  },
  protected: {
    symbol: "",
    constant: []
  },
  onShow() {},
  onInit() {
    this.alkali = this.$app.$def.chemistry.alkali
    this.alkaline = this.$app.$def.chemistry.alkaline
    this.noble = this.$app.$def.chemistry.noble
    this.transition = this.$app.$def.chemistry.transition
    this.post_transition = this.$app.$def.chemistry.post_transition
    this.metalloids = this.$app.$def.chemistry.metalloids
    this.active_nometals = this.$app.$def.chemistry.active_nometals
    this.have_describe = this.$app.$def.chemistry.have_describe
    this.screen_type = this.$app.$def.device.screen_type
    this.device = this.$app.$def.device.device
    this.rotate = this.$app.$def.chemistry.rotate
  },
  rotate_change(e) {
    this.$app.$def.chemistry.rotate = e.checked
    let value = "off"
    if (e.checked) {
      value = "on"
    }
    storage.set({
      key: "rotate",
      value: value,
      success: function (data) {
        console.log("handling success", data)
      },
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
  },
  describe_changd(e) {
    this.$app.$def.chemistry.have_describe = e.checked
  },
  alkali_changd(e) {
    this.$app.$def.chemistry.alkali = e.checked
  },
  alkaline_changd(e) {
    this.$app.$def.chemistry.alkaline = e.checked
  },
  noble_changd(e) {
    this.$app.$def.chemistry.noble = e.checked
  },
  transition_changd(e) {
    this.$app.$def.chemistry.transition = e.checked
  },
  post_transition_changd(e) {
    this.$app.$def.chemistry.post_transition = e.checked
  },
  metalloids_changd(e) {
    this.$app.$def.chemistry.metalloids = e.checked
  },
  active_nometals_changd(e) {
    this.$app.$def.chemistry.active_nometals = e.checked
  },
  back() {
    router.back()
  }
}
</script>

<style lang="scss">
@import "../../../material/divider.scss";
@import "../../../material/base.scss";
@import "../../../material/app_bar.scss";
@import "../../../material/card.scss";
$elements: alkali, alkaline, lanthanoid, actinoid, transition, poor, metalloid, nonmetal, noble,
  nocategory;
$colors: #6c3b01, #846011, #402c17, #732e4c, #711019, #003666, #015146, #3e6418, #3a2151, #222;
.page {
  flex-direction: column;
  align-items: flex-start;
  background-color: #141218;
}

.notice-rect {
  width: 320px;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  margin: 10px 10px 10px 10px;
}
.notice-pill {
  width: 95%;
  align-items: flex-start;
  flex-direction: column;
  margin: 10px 10px 10px 10px;
}
.latex {
  object-fit: cover;
}
.color-rect {
  flex-direction: row;
  align-items: flex-start;
}
.color-pill {
  align-items: flex-start;
  flex-direction: column;
}
@each $e in $elements {
  $index: index($elements, $e);
  .#{$e} {
    background-color: nth($colors, $index);
    width: 30px;
    height: 30px;
    margin-left: 10px;
  }
}
</style>

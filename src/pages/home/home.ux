<template>
  <div class="home-page">
    <scroll scroll-y="true" class="content-{{ device_type }}">
      <div class="card">
        <text class="card__title">元素周期表</text>
        <text class="card__title">{{ loading }}</text>
        <div class="card__actions">
          <input type="button" class="button" value="进入" @click="gotoElementsTable" />
        </div>
      </div>
      <div style="width: 100%; height: 10px"></div>
      <div class="card">
        <text class="card__title">物理常数表</text>
        <text class="card__title"></text>
        <div class="card__actions">
          <input type="button" class="button" value="进入" @click="gotoPhysics" />
        </div>
      </div>
      <div style="width: 100%; height: 10px"></div>
      <div class="card">
        <text class="card__title">计算相对分子质量</text>
        <text class="card__title"></text>
        <div class="card__actions">
          <input type="button" class="button" value="进入" @click="gotoGetCompound" />
        </div>
      </div>
    </scroll>
    <div class="appBar-{{ device_type }}">
      <text>Physium</text>
      <img class="more_button" src="/common/more_horiz.png" @click="gotoInfoPage" />
    </div>
  </div>
</template>

<script>
import router from "@system.router"
import storage from "@system.storage"
export default {
  private: {
    loading: "",
    elements_button: true,
    width: "",
    device_type: ""
  },
  onShow() {
    this.loading = ""
    this.elements_button = true
    var rotate = ""
    storage.get({
      key: "rotate",
      default: "off",
      success: this.rotate_change,
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
    storage.get({
      key: "version",
      success: this.handle_version,
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
    storage.get({
      key: "elements_rotate",
      success: this.handle_rotate,
      fail: function (data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
  },
  handle_rotate(data){
    var value = true
    if (data == "off") {
      value = false
    }
    this.$app.$def.chemistry.elements_rotate = value
  },
  rotate_change(data) {
    var value = false
    if (data == "on") {
      value = true
    }

    this.$app.$def.chemistry.rotate = value
  },
  onInit() {
    var first_use = ""
    this.device_type = this.$app.$def.device.device
    console.log(this.$app.$def.device.device)
  },
  handle_version(data) {
    console.log(data)
    if (data == "") {
      router.replace({
        uri: "pages/intro/readme"
      })
    } else {
      if (data != "v0.5.1-alpha") {
        router.replace({
          uri: "pages/intro/update"
        })
      }
    }
  },
  back() {
    router.back()
  },
  gotoElementsTable() {
    this.loading = "正在加载,请稍后"
    if (this.elements_button) {
      this.elements_button = false
      if (this.$app.$def.chemistry.rotate) {
        router.push({
          uri: "pages/chemistry/index_rotate"
        })
      } else {
        router.push({
          uri: "pages/chemistry/index"
        })
      }
    }
  },
  gotoInfoPage() {
    router.push({
      uri: "pages/info"
    })
  },
  gotoPhysics() {
    router.push({
      uri: "pages/physics/index"
    })
  },
  gotoGetCompound() {
    router.push({
      uri: "pages/chemistry/get_compound"
    })
  }
}
</script>

<style lang="scss">
@use "../../material/base.scss";
@use "../../material/app_bar.scss";
@use "../../material/divider.scss";
@use "../../material/card.scss";
.home-page {
  height: 100%;
  width: 100%;
  position: absolute;

  background-color: #141218;
}
.more_button {
  object-fit: contain;
  height: 50px;
  width: 50px;
}
</style>
